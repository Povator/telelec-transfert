<?php
/**
 * Gestionnaire d'upload de fichiers
 * 
 * Ce script g√®re le t√©l√©versement de fichiers, incluant:
 * - La validation des fichiers
 * - La s√©curisation des noms de fichiers
 * - La gestion des doublons
 * - L'analyse antivirus
 * 
 * @author  TeleLec
 * @version 1.3
 */

// Configuration des erreurs
ini_set('display_errors', 1);
error_reporting(E_ALL);

// AJOUT: D√©finir le fuseau horaire Europe/Paris pour tout le script
date_default_timezone_set('Europe/Paris');

header('Content-Type: application/json');

// Inclure les utilitaires et le syst√®me antivirus
require_once __DIR__ . '/../includes/file_utils.php';
require_once __DIR__ . '/../includes/antivirus.php';

// Traitement de la requ√™te
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    /** @var string $targetDir R√©pertoire de destination des fichiers */
    $targetDir = __DIR__ . "/../uploads/";

    // Cr√©e le r√©pertoire d'uploads s'il n'existe pas
    if (!file_exists($targetDir)) {
        mkdir($targetDir, 0777, true);
    }

    // V√©rifie si un fichier a √©t√© envoy√©
    if (!isset($_FILES["fileToUpload"])) {
        echo json_encode(['status' => 'error', 'message' => 'Aucun fichier re√ßu']);
        exit;
    }

    // R√©cup√®re le nom original et g√©n√®re un nom unique
    $originalName = $_FILES["fileToUpload"]["name"];
    $uniqueFile = generateUniqueFilename($targetDir, $originalName);
    $finalName = $uniqueFile['filename'];
    $targetFile = $uniqueFile['filepath'];

    // NOUVEAU : Scan en streaming pendant le d√©placement
    $tempFilePath = $_FILES["fileToUpload"]["tmp_name"];
    
    try {
        // INNOVATION: Scan et d√©placement en une seule op√©ration
        $streamScanResult = moveAndScanFile($tempFilePath, $targetFile);
        
        if ($streamScanResult['status'] === false) {
            // Virus d√©tect√© pendant le transfert - supprimer imm√©diatement
            if (file_exists($targetFile)) {
                unlink($targetFile);
            }
            echo json_encode([
                'status' => 'error',
                'message' => $streamScanResult['message']
            ]);
            exit;
        }
        
        // Le fichier est d√©j√† en place et pr√©-scann√© !
        // Insertion IMM√âDIATE en base
        $conn = new PDO("mysql:host=db;dbname=telelec;charset=utf8", 'telelecuser', 'userpassword');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        date_default_timezone_set('Europe/Paris');
        $uploadDate = date('Y-m-d H:i:s');
        $downloadCode = generateDownloadCode();
        $userCity = getCity($_SERVER['REMOTE_ADDR']);
        
        // D√©terminer le statut selon le r√©sultat du scan
        $antivirusStatus = $streamScanResult['status'] === true ? 'true' : 
                          ($streamScanResult['status'] === 'pending' ? 'pending' : 'warning');
        
        $sql = "INSERT INTO files (filename, upload_date, upload_ip, upload_city, download_code, antivirus_status, antivirus_message) 
                VALUES (?, ?, ?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->execute([
            $finalName, 
            $uploadDate,
            $_SERVER['REMOTE_ADDR'], 
            $userCity,
            $downloadCode,
            $antivirusStatus,
            $streamScanResult['message']
        ]);

        $fileId = $conn->lastInsertId();
        
        // Si scan en attente, lancer le scan complet en arri√®re-plan
        if ($streamScanResult['status'] === 'pending') {
            exec("php " . __DIR__ . "/../admin/background_scan.php {$fileId} " . escapeshellarg($targetFile) . " > /dev/null 2>&1 &");
        }

        echo json_encode([
            'status' => 'success',
            'message' => 'Fichier upload√© avec succ√®s',
            'filename' => $finalName,
            'original' => $originalName,
            'file_id' => $fileId,
            'scan_status' => $antivirusStatus
        ]);

    } catch (Exception $e) {
        // Nettoyer en cas d'erreur
        if (file_exists($targetFile)) {
            unlink($targetFile);
        }
        
        error_log("UPLOAD ERROR: " . $e->getMessage());
        echo json_encode([
            'status' => 'error',
            'message' => 'Erreur lors du traitement: ' . $e->getMessage()
        ]);
    }
} else {
    echo json_encode([
        'status' => 'error',
        'message' => 'M√©thode HTTP non autoris√©e'
    ]);
}

// NOUVELLES FONCTIONS √Ä AJOUTER √† la fin du fichier :

function moveAndScanFile($source, $destination) {
    $sourceHandle = fopen($source, 'rb');
    $destHandle = fopen($destination, 'wb');
    
    if (!$sourceHandle || !$destHandle) {
        return ['status' => false, 'message' => 'Impossible d\'ouvrir les fichiers'];
    }
    
    $chunkSize = 1024 * 1024; // 1MB chunks
    $totalSize = 0;
    $scanBuffer = '';
    
    while (!feof($sourceHandle)) {
        $chunk = fread($sourceHandle, $chunkSize);
        if ($chunk === false) break;
        
        // √âcrire imm√©diatement dans le fichier final
        fwrite($destHandle, $chunk);
        
        // Scan rapide du chunk
        $chunkResult = scanChunkBasic($chunk, $totalSize);
        if (!$chunkResult['safe']) {
            fclose($sourceHandle);
            fclose($destHandle);
            unlink($destination); // Supprimer le fichier infect√©
            return [
                'status' => false,
                'message' => "üö® MENACE D√âTECT√âE: " . $chunkResult['threat']
            ];
        }
        
        $totalSize += strlen($chunk);
    }
    
    fclose($sourceHandle);
    fclose($destHandle);
    
    // Fichier transf√©r√© avec succ√®s, d√©terminer si scan complet n√©cessaire
    if ($totalSize < 10 * 1024 * 1024) { // < 10MB
        // Scan ClamAV imm√©diat
        try {
            $clamResult = scanFile($destination);
            return [
                'status' => $clamResult['status'],
                'message' => $clamResult['message']
            ];
        } catch (Exception $e) {
            return [
                'status' => 'warning',
                'message' => '‚úÖ Pr√©-scan OK, ClamAV indisponible'
            ];
        }
    } else {
        // Scan en arri√®re-plan pour gros fichiers
        return [
            'status' => 'pending',
            'message' => '‚úÖ Fichier accept√©, scan complet en cours...'
        ];
    }
}

function scanChunkBasic($chunk, $position) {
    // D√©tections rapides sur le chunk
    $threats = [
        'EICAR-STANDARD-ANTIVIRUS-TEST' => 'Test EICAR',
        'MZ' => 'Ex√©cutable Windows (PE)',
        "\x7fELF" => 'Ex√©cutable Linux (ELF)',
        'eval(' => 'Code PHP suspect',
        'base64_decode(' => 'D√©codage Base64 suspect',
        'system(' => 'Commande syst√®me',
        'exec(' => 'Ex√©cution de commande',
        'shell_exec(' => 'Ex√©cution shell',
        '<script' => 'Script JavaScript suspect'
    ];
    
    foreach ($threats as $pattern => $description) {
        if (stripos($chunk, $pattern) !== false) {
            return ['safe' => false, 'threat' => $description];
        }
    }
    
    return ['safe' => true];
}
?>